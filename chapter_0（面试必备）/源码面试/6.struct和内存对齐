1.内存由于避免浪费空间，提升性能，一般不使用机器字长（机器最大对齐边界），使用数据类型大小和最大对齐边界两者中较小的一个
2.结构体的对齐边界需要先确定每个成员的对齐边界，并取成员中最大的对齐边界，存储结构体的起始地址是最大对齐边界的倍数

例一：
    type T struct {
        a int8      //1byte
        b int64     //8byte
        c int32     //4byte
        d int16     //2byte
    }

    1.那么需要对每个成员的起始地址做是否满足addr % 8 = 0的判断，取模等于0就可以在内存中连续存储，不然就需要空出8个byte再存储下个成员
    2.存储完需要计算4个成员总占用字节数，T结构体总占用22字节，需要扩充到类型对齐边界的倍数，扩张到24字节

------------------------------------------------------------------------------------------------------------------------
1.每个类型元数据都需要记录：类型大小、类型名称、对齐边界、是否自定义等等作为每个类型元数据的header（源码地址：runtime/type）
2.结构体的对齐边界需要先确定每个成员的对齐边界，并取成员中最大的对齐边界，存储结构体的起始地址是最大对齐边界的倍数
3.那么需要对每个成员的起始地址做是否满足addr % 8 = 0的判断，取模等于0就可以在内存中连续存储，不然就需要空出8个byte再存储下个成员
4.存储完需要计算4个成员总占用字节数，T结构体总占用22字节，需要扩充到类型对齐边界的倍数，扩张到24字节