TCP协议：
TCP使用四元组（源IP，源端口,目标IP，目标端口）来标识一个TCP套接字
是一种面向连接的、可靠的、基于字节流的传输层通信协议
有客户端，服务器的区别
适合做视频播放

UDP协议：
而UDP使用的是二元组（源端口，目标端口）来标识
是一种无连接、不可靠的、面向报文的传输层通信协议，基于UDP传输消息随机分配端口号，需要绑定端口号和ip才能传输和接收
没有客户端，服务器的区别
使用UDP传输数据时，由应用程序根据需要提供报文到达确认、排序、流量控制等功能。
通常情况下，UDP采用实时传输机制和时间戳来传输语音和视频数据。
UDP不提供重传机制，占用资源小，处理效率高。

①UDP为什么不可靠：
不保证消息交付：不确认，不重传，无超时
不保证交付顺序：不设置包序号，不重排，不会发生队首阻塞
不跟踪连接状态： 不必建立连接或重启状态机
不需要拥塞控制： 不内置客户端或网络反馈机制

②UDP为什么无连接：
一个UDP客户可以创建一个套接字并发送一个数据报给一个给定的服务器，让后立即用同一个套接字发送另一个数据报给另一个服务器。
同样的一个UDP服务器可以用同一个UDP套接字从若干个不同的客户接收数据报，每个客户一个数据包。


所谓的**“流模式”，是指TCP 发送端发送几次数据和接收端接收几次数据是没有必然联系的
比如你通过 TCP 连接给另一端发送数据，你只调用了一次 write ，发送了 100 个字节，但是对方可以分 10 次收完，每次 10 个字节；你也可以调用 10 次 write ，每次 10 个字节，但是对方可以一次就收完。
原因：这是因为 TCP 是面向连接的，一个 Socket 中收到的数据都是由同一台主机发出，且有序地到达，所以每次读取多少数据都可以。

所谓的**“数据报模式”**，是指 UDP 发送端调用了几次 write ，接收端必须用相同次数的 read 读完。
UDP 是基于报文的，在接收的时候，每次最多只能读取一个报文，报文和报文是不会合并的，如果缓冲区小于报文长度，则多出的部分会被丢弃。
原因：这是因为 UDP 是无连接的，只要知道接收端的 IP 和端口，任何主机都可以向接收端发送数据。这时候，如果一次能读取超过一个报文的数据，则会乱套。
