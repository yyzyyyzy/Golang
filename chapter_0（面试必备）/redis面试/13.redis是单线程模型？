Redis4.0之前是单线程运行的；Redis4.0后开始支持多线程。
Redis4.0之前使用单线程的原因：1、单线程模式方便开发和调试；2、Redis内部使用了基于epoll的多路复用；3、Redis主要的性能瓶颈是内存或网络带宽。

文件事件处理器的结构包含 4 个部分：
多个 Socket 。
IO 多路复用程序。
文件事件分派器。
事件处理器（连接应答处理器、命令请求处理器、命令回复处理器）
多个 Socket 可能会并发产生不同的操作，每个操作对应不同的文件事件，但是 IO 多路复用程序会监听多个 socket，
会将 socket 产生的事件放入队列中排队，事件分派器每次从队列中取出一个事件，把该事件交给对应的事件处理器进行处理。

Redis单线程效率高的原因

1、C 语言实现。
2、纯内存操作。
    Redis 为了达到最快的读写速度，将数据都读到内存中，并通过异步的方式将数据写入磁盘。所以 Redis 具有快速和数据持久化的特征。
    如果不将数据放在内存中，磁盘 I/O 速度为严重影响 Redis 的性能。
3、基于非阻塞的 IO 多路复用机制。
4、单线程，避免了多线程的频繁上下文切换问题。
    Redis 利用队列技术，将并发访问变为串行访问，消除了传统数据库串行控制的开销。
    实际上，Redis 4.0 开始，也开始有了一些异步线程，用于处理一些耗时操作。
    例如说，异步线程，实现惰性删除（解决大 KEY 删除，阻塞主线程）和异步 AOF （解决磁盘 IO 紧张时，fsync 执行一次很慢）等等。
5、丰富的数据结构。