1、选取最适用的字段属性
MySQL可以很好的支持大数据量的存取，但是一般说来，数据库中的表越小，在它上面执行的查询也就会越快。
因此，在创建表的时候，为了获得更好的性能，我们可以将表中字段的宽度设得尽可能小。
2、使用连接（JOIN）来代替子查询(Sub-Queries)
3、使用联合(UNION)来代替手动创建的临时表
联合可以把需要使用临时表的两条或更多的select查询合并的一个查询中。
在客户端的查询会话结束的时候，临时表会被自动删除，从而保证数据库整齐、高效。
4、事务
当语句块中的某一条语句运行出错的时候，整个语句块的操作就会变得不确定起来。
如果要把某个数据同时插入两个相关联的表中，
可能会出现这样的情况：第一个表中成功更新后，数据库突然出现意外状况，造成第二个表中的操作没有完成，
这样，就会造成数据的不完整，甚至会破坏数据库中的数据。要避免这种情况，就应该使用事务，
它的作用是：要么语句块中每条语句都操作成功，要么都失败。换句话说，就是可以保持数据库中数据的一致性和完整性。
5、锁定表
6、使用外键
7、使用索引
范围查询用B+tree，数值比较用hash
8、优化的查询语句
少用like模糊查询，尽量精确查询
少用函数操作

对于mysql的优化，一般是出现问题开始优化，其实应该在项目初期对数据进行分析建模时就应该考虑到做数据库的优化
比如表字段的长度，分库分表，创建合适的索引等；之前的油田项目中，需要保存无线示功仪的数据，方便维护和故障诊断
其中就用到了之前的几种优化方式，一般情况下的优化方式有：。。。。