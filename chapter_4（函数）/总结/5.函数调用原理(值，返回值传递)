调用原理：
1.内存相对于可执行程序来说,可以分为四个区域：代码区,数据区,堆区,栈区;
  栈区是用来存储程序执行过程中函数内部定义的信息(参数/返回值等)和局部变量
2.由于栈区的数据结构是先进后出,后进先出; 那么函数调用先加载main函数定义信息,再加载调用函数的信息;
3.函数调用结束，先销毁的也是被调用函数的信息;


func swap(a, b int) {
	a, b = b, a  // 被调用函数的参数和返回值，都在调用者的函数栈帧中; 传参数就是值拷贝，入栈顺序为从右往左b=2,a=1;
}

func main() {  // 通过main函数调用swap函数交换a,b两个局部变量的值;
	a, b := 1, 2
	swap(a, b)  // 最终swap调用只改变了形式参数b=1,a=2,而main函数的局部变量没有改变
	fmt.Println(a, b)
}
