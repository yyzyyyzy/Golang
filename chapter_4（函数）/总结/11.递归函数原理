func test01(a int) {
	if a == 1 {
		fmt.Println(a)
		return
	}
	test01(a - 1)
	fmt.Println(a)
}

func main() {
	test01(3)
}

1.分配main()栈帧
2.分配test(3)栈帧, a = 3 不执行if语句, 直接执行test(2)
3.分配test(2)栈帧, a = 2 不执行if语句, 直接执行test(1)
4.分配test(1)栈帧, a = 1 满足if的判断条件, 打印 a = 1, return终止递归, 打印 a = 1, 销毁test(1)栈帧
5.销毁test(2)栈帧, 打印 a = 2
6.销毁test(3)栈帧, 打印 a = 3

ps:
1.销毁栈内的调用空间是从内向外的（后进先出）, 所以打印顺序也是倒置的
2.Go语言支持递归, 但我们在使用递归时, 开发者需要设置退出条件, 否则递归将陷入无限循环中