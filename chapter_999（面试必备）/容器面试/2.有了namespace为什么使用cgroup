Docker 容器使用 linux namespace 来隔离其运行环境，使得容器中的进程看起来就像一个独立环境中运行一样。
但是，光有运行环境隔离还不够，因为这些进程还是可以不受限制地使用系统资源，比如网络、磁盘、CPU以及内存 等。
关于其目的，一方面，是为了防止它占用了太多的资源而影响到其它进程；
另一方面，在系统资源耗尽的时候，linux 内核会触发 OOM，这会让一些被杀掉的进程成了无辜的替死鬼。
因此，为了让容器中的进程更加可控，Docker 使用 Linux cgroups 来限制容器中的进程允许使用的系统资源。


cgroups 的作用
1.cgroups 为不同用户层面的资源管理提供了一个统一接口，从单个的资源控制到操作系统层面的虚拟化，cgroups提供了4大功能：
    资源限制
    cgroups可以对任务使用的资源总额进行限制。
    如 设定应用运行时使用的内存上限，一旦超过配额就发出OOM提示

    优先级分配
    通过分配的CPU时间片数量以及磁盘IO带宽大小，实际上就相当于控制了任务运行的优先级

    资源统计
    cgroups可以统计系统的资源使用量
    如CPU使用时长，内存用量等，这个功能非常适用于计费

    任务控制
    cgroups 可以对任务进行挂起、恢复等操作